Goal: Design a product card component that displays the product image, name, price, and description.


Structure:
      -User Interface: Design a simple and user-friendly web interface where users can input a number and calculate its factorial using both iterative and recursive methods.
      -Input Validation: Implement checks to ensure the user enters a valid positive integer.
      -Output: Display the calculated factorial value, and the method used (iterative or recursive).
      -Backend (Optional): Use server-side technologies to handle the calculations if necessary, or simply handle the logic on the client side.

Technologies:
      -HTML: For creating the structure of the web page.
      -CSS: For styling the page and making it visually appealing and responsive.
      -JavaScript: For implementing the factorial calculation logic (both iterative and recursive methods).
      -Optional (Backend):
             -Node.js/Express.js: For creating a backend to handle the factorial calculation, if needed.
             -API: Optionally, create a REST API for calculating factorial using both methods.
             -Database (Optional): If required, store user input and results in a database.

Optional:
      -Bootstrap/Tailwind CSS: To expedite styling and ensure responsiveness across devices.
      -React.js/Vue.js/Angular: For creating dynamic, single-page applications if the project scope is extended.
      -API Integration: If backend calculation is needed, integrate a server-side technology like Node.js or Django.

Deliverables:
      -Complete front-end code (HTML, CSS, JavaScript) and optionally backend files.
      -A working web application hosted on a platform like GitHub Pages, Netlify, or Heroku (if backend is used).
      -Documentation of the appâ€™s functionality, usage, and setup.

Checklist:
      -Design a clean and simple user interface for the web page.
      -Implement factorial logic in JavaScript (both iterative and recursive methods).
      -Implement input validation to handle non-integer or negative numbers.
      -Test the web application across different browsers and devices for compatibility.
      -Ensure the web app is responsive and user-friendly.
      -Submit the complete code files and documentation for review.